name: api-poi-cd

env:
  poi_path: apis/poi/**
  registry: openhackxqzxmauhbxtiiacr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  staging_url: https://openhackdevopsapp-poi-0x001-staging.azurewebsites.net
  prod_url: hhttps://openhackdevopsapp-poi-0x001.azurewebsites.net
  resource_group: rgOpenHackDevOps20
  webapp_name: openhackdevopsapp-poi-0x001
  build_name: POI
  ACR_URL: 'openhackxqzxmauhbxtiiacr.azurecr.io'
  
on:
  workflow_dispatch:
    inputs: 
      reason:
        description: 'Reason'
        required: true
        default: 'N/A'
      imagetag: 
        description: 'imagen a desplegar'
        required: true
              
jobs: 
    deploy_staging: 
      runs-on: ubuntu-latest
      
      steps:
        - name: Azure authentication
          uses: azure/login@v1
          with:
                creds: ${{ secrets.AZURE_CREDENTIALS  }}

        - name: Azure WebApp
          uses: Azure/webapps-deploy@v2
          with:
            app-name: ${{ env.webapp_name }}
            slot-name: staging
              #images: openhackxqzxmauhbxtiiacr.azurecr.io/devopsoh/api-poi:7
            images: ${{ env.registry }}/${{ env.repository }}:${{ github.event.inputs.imagetag }} 
          
        - name: Web Validate
          env:
            URL: ${{ env.staging_url }}
          run: |
              sleep 30
              res=$(curl -s -w "%{http_code}" -o resp.txt "$URL"/api/healthcheck/poi); if [ $res -eq 200 ]; then echo "HTTP:"$res; else exit $res; fi
              cat resp.txt
              if grep -q "Healthy" resp.txt ; then echo "API POI Healthy"; else exit 2; fi
